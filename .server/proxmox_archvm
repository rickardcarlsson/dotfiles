# https://wiki.archlinux.org/title/Installation_guide

# Set the keyboard layout
ls /usr/share/kbd/keymaps/**/*.map.gz
loadkeys sv-latin1

# Update the system clock
timedatectl set-ntp true
timedatectl set-timezone Europe/Stockholm
timedatectl status [verify]

# Partition the disks
fdisk -l
# fdisk /dev/the_disk_to_be_partitioned
fdisk /dev/sda
# Boot partition
g [create a new empty GPT partition table]
n [add a new partition]
[default partition number]
[default first sector]
+1M
t [change a partition type]
# 1 [partition number]
4 [BIOS boot]


# Storage partition
n
[default partition number]
[default first sector]
[default last sector]

p [print the partition table]
w [write table to disk and exit]

# Format the partitions
# mkfs.ext4 /dev/root_partition
mkfs.ext4 /dev/sda2
lsblk -f [verify]
# mount /dev/root_partition /mnt
mount /dev/sda2 /mnt
lsblk -f [verify]

# Select the mirrors
reflector --country Sweden --country Germany --age 12 --protocol https --sort rate --save /etc/pacman.d/mirrorlist

# Install essential packages
pacstrap /mnt base linux linux-firmware

## Configure the system
# Fstab
genfstab -U /mnt >> /mnt/etc/fstab

# Chroot
arch-chroot /mnt

# Time zone
ln -sf /usr/share/zoneinfo/Europe/Stockholm /etc/localtime
hwclock --systohc

# Install packages
pacman -S neovim sudo grub nfs-utils networkmanager openssh git


## Localization
# Edit /etc/locale.gen and uncomment en_US.UTF-8 UTF-8 and other needed locales. 
#en_US.UTF-8 UTF-8
#sv_SE.UTF-8 UTF-8
locale-gen

# Create the locale.conf(5) file, and set the LANG variable accordingly: 
  /etc/locale.conf
LANG=en_US.UTF-8

#If you set the keyboard layout, make the changes persistent in vconsole.conf(5):
  /etc/vconsole.conf
KEYMAP=sv-latin1

## Network configuration
  /etc/hostname
#myhostname
docker

  /etc/hosts
127.0.0.1	localhost
::1		localhost
#127.0.1.1	myhostname.localdomain	myhostname
192.168.1.4	docker.local.sickan.se docker

systemctl enable NetworkManager

# Initramfs
mkinitcpio -P

# Root password
passwd

# Add user + privileges
useradd -m username
passwd username
usermod -aG sys,network,power,input,wheel username
EDITOR=nvim visudo
# Uncomment # %wheel ALL=(ALL) ALL

# GRUB installation
# grub-install --target=i386-pc /dev/sdX
# where /dev/sdX is the disk (not a partition) where GRUB is to be installed. For example /dev/sda or /dev/nvme0n1, or /dev/mmcblk0.
grub-install --target=i386-pc /dev/sda

# Generate the main configuration file
grub-mkconfig -o /boot/grub/grub.cfg

# Reboot
exit
umount -R /mnt

reboot

# Sudoedit
  /etc/sudoers
Defaults  !sudoedit_checkdir

# Enable SSH
systemctl enable sshd --now
# Generate ssh keys


# Install paru (AUR Helper, https://github.com/Morganamilo/paru)
sudo pacman -S --needed base-devel
git clone https://aur.archlinux.org/paru.git
cd paru
makepkg -si

# Install packages
paru -S zsh stow qemu-guest-agent man-db tmux ranger exa fzf ripgrep fd unzip docker docker-compose antigen bat-extras-git apache-tools nerd-fonts-fira-code pacback bind

# Enable pacback pacman hook
sudo pacback --install_hook

# Enable qemu-guest-agent
systemctl enable qemu-guest-agent --now

## ZSH
chsh -s $(which zsh)

# Dotfiles
git clone git@github.com:username/dotfiles.git $HOME/.dotfiles

# Tmux
git clone https://github.com/tmux-plugins/tpm $HOME/git/tpm

## Symlink dotfiles
zsh, ssh, ranger

## Docker
systemctl enable docker --now
docker network create traefik
docker network create socket_proxy

# Mount NFS with systemd
  /etc/fstab
servername:/server_nfs-path   /mountpoint/on/client nfs  _netdev,noauto,x-systemd.automount,x-systemd.mount-timeout=10,timeo=14,x-systemd.idle-timeout=1min 0 0
# truenas.local.sickan.se:/mnt/Media5TB/htpc/     /docker/htpc/data   nfs  _netdev,noauto,x-systemd.automount,x-systemd.mount-timeout=10,timeo=14,x-systemd.idle-timeout=1min 0 0
sudo systemctl daemon-reload
sudo systemctl restart remote-fs.target


# Traefik
# https://techno-tim.github.io/posts/traefik-portainer-ssl/
CF_API_KEY: Global API Key from https://dash.cloudflare.com/profile/api-tokens 
Write CF_API_KEY to /docker/security/.secrets/CLOUDFLARE_API_KEY
Write CF_API_EMAIL to /docker/security/.secrets/CLOUDFLARE_API_EMAIL
Write Basic auth file: echo $(htpasswd -nb user password) >> /docker/traefik/data/.secrets/BASIC_AUTH
# If basicauth.users is used (not file): echo $(htpasswd -nb user password) | sed -e s/\\$/\\$\\$/g 

# Guacamole
# SSH-key (PEM format)
ssh-keygen -m PEM -t rsa -b 4096 -C "admin@sickan.se" -f $(pwd)/id_rsa
Add public key to ssh-hosts (authorized_keys)
