// based on a keyboard map from an 'xkb/symbols/se' file

default partial alphanumeric_keys
xkb_symbols "basic" {
    include "latin(type2)"
    include "se(nodeadkeys)"
    include "sickan(rebinds)"
    include "sickan(mods)"
    include "sickan(extra_groups)"
    include "sickan(shift_caps)"
    include "sickan(vim_navigation)"
    include "sickan(function_keys)"
};

partial alphanumeric_keys
xkb_symbols "rebinds" {

    name[Group1]="Rebound keys";
    key.type[Group1]="FOUR_LEVEL";

    key <TLDE> { [ asciitilde, F13, F14, F15 ] };                       // ~

    key <AE12> { [ grave, acute, dead_grave, dead_acute ] };            // ` ´

    key <AD11> { [ aring, Aring, bracketleft, braceleft ]};             // Å
    key <AD12> { [ diaeresis, asciicirum , bracketright, braceright ]}; // ¨

    key <AC10> { [ odiaeresis, Odiaeresis, semicolon, colon ]};         // Ö
    key <AC11> { [ adiaeresis, Adiaeresis, apostrophe, quotedbl ]};     // Ä

    key <AB10> { [ minus, underscore, slash, question ]};               // -

};

partial modifier_keys
xkb_symbols "mods" {

    name[Group1]="Modifiers";

    key <LALT> {
        type = "TWO_LEVEL",
        symbols = [ Alt_L , Alt_L ]
        , actions = [ SetMods(modifiers=Mod1), SetGroup(group=2) ]
    };

    key <LWIN> {
        type = "TWO_LEVEL",
        symbols = [ Super_L, Super_L ],
        actions = [ SetMods(modifiers=Super), SetGroup(group=3) ]
    };

    key <CAPS> {
        type = "TWO_LEVEL",
        symbols[Group1] = [ Escape, NoSymbol ],
        symbols[Group4] = [ Escape, NoSymbol ],
        actions[Group1] = [ NoAction(), LockGroup(group=4) ],
        actions[Group3] = [ NoAction(), LockGroup(group=1) ]
    };
};

partial alphanumeric_keys
xkb_symbols "extra_groups" {

    name[Group2]="Shift + Alt as Group 2";
    name[Group3]="Shift + Win as Group 3";
    key.type[Group2] = "ONE_LEVEL";
    key.type[Group3] = "ONE_LEVEL";

    key <AE02> { [], [ at ] };

    key <AE07>	{ [], [ braceleft ]	};
    key <AE08>	{ [], [ bracketleft ] };
    key <AE09>	{ [], [ bracketright ] };
    key <AE10>	{ [], [ braceright ] };
    key <AE11>	{ [], [ backslash ]	};


    key <AD11> { [], [ bracketleft ], [ braceleft ] };             // Å
    key <AD12> { [], [ bracketright ], [ braceright ] }; // ¨

    key <AC10> { [], [ semicolon ], [ colon ] };         // Ö
    key <AC11> { [], [ apostrophe ], [ quotedbl ] };     // Ä

};


partial alphanumeric_keys
xkb_symbols "shift_caps" {

    name[Group4] = "Shift + Caps as group four";
    key.type[Group4] = "TWO_LEVEL";

};

partial alphanumeric_keys
xkb_symbols "vim_navigation" {

    name[Group2]="Vim navigation with Shift + Alt";
    key.type[Group2] = "ONE_LEVEL";


    key <AC06>  { // H
        symbols[Group2] = [ Left ],
        actions[Group2] = [ RedirectKey(key=<LEFT>, clearMods=Shift) ] };

    key <AC07>  { // J
        symbols[Group2] = [ Down ],
        actions[Group2] = [ RedirectKey(key=<DOWN>, clearMods=Shift) ] };

    key <AC08>  { // K
        symbols[Group2] = [ Up ],
        actions[Group2] = [ RedirectKey(key=<UP>, clearMods=Shift) ] };

    key <AC09>  { // L
        symbols[Group2] = [ Right ],
        actions[Group2] = [ RedirectKey(key=<RGHT>, clearMods=Shift) ] };

    key <AD07>  { // U
        symbols[Group2] = [ Next ],
        actions[Group2] = [ RedirectKey(key=<PGDN>, clearMods=Shift) ] };

    key <AD08>  { // I
        symbols[Group2] = [ Prior ],
        actions[Group2] = [ RedirectKey(key=<PGUP>, clearMods=Shift) ] };

    key <AB07>  { // M
        symbols[Group2] = [ End ],
        actions[Group2] = [ RedirectKey(key=<END>, clearMods=Shift) ] };

    key <AB08>  { // ,
        symbols[Group2] = [ Home ],
        actions[Group2] = [ RedirectKey(key=<HOME>, clearMods=Shift) ] };

};

partial alphanumeric_keys
xkb_symbols "function_keys" {

    name[Group1]="Function keys";
    key.type[Group1]="FOUR_LEVEL";

    key <FK01> { [ F1, F1, XF86Switch_VT_1, F1 ] };
    key <FK02> { [ F2, F2, XF86Switch_VT_2, F2 ] };
    key <FK03> { [ F3, F3, XF86Switch_VT_3, F3 ] };
    key <FK04> { [ F4, F4, XF86Switch_VT_4, F4 ] };
    key <FK05> { [ F5, F5, XF86Switch_VT_5, F5 ] };
    key <FK06> { [ F6, F6, XF86Switch_VT_6, F6 ] };
    key <FK07> { [ F7, F7, XF86Switch_VT_7, F7 ] };
    key <FK08> { [ F8, F8, XF86Switch_VT_8, F8 ] };
    key <FK09> { [ F9, F9, XF86Switch_VT_9, F9 ] };
    key <FK10> { [ F10, F10, XF86Switch_VT_10, F10 ] };
    key <FK11> { [ F11, F11, XF86Switch_VT_11, F11 ] };
    key <FK12> { [ F12, F12, XF86Switch_VT_12, F12 ] };
};

// vim: syntax=xkb
