// based on a keyboard map from an 'xkb/symbols/se' file

default partial alphanumeric_keys
xkb_symbols "basic" {
    include "latin(type2)"
    include "se(nodeadkeys)"
    include "sickan(rebinds)"
    include "sickan(mods)"
    include "sickan(shift_alt)"
    include "sickan(shift_caps)"
    include "sickan(vim_navigation)"
};

partial alphanumeric_keys
xkb_symbols "rebinds" {
 
     name[Group1]="Rebound keys";
     key.type[Group1]="FOUR_LEVEL";

     // key <TLDE> { [ asciitilde, onehalf, paragraph, threequarters ] }; // ~
     key <TLDE> { [ asciitilde, F13, F14, F15 ] }; // ~

     key <AE12> { [ grave, acute, plusminus, notsign ] }; // Acute & grave switched

 };

partial modifier_keys
xkb_symbols "mods" {

    name[Group1]="Modifiers";

    key <LALT> {
        type[Group1] = "TWO_LEVEL",
        symbols[Group1] = [ Alt_L , Alt_L ]
        , actions = [ SetMods(modifiers=Mod1), SetGroup(group=2) ]
    };
    key <CAPS> {
        type = "TWO_LEVEL",
        symbols[Group1] = [ Escape, NoSymbol ],
        symbols[Group3] = [ Escape, NoSymbol ],
        actions[Group1] = [ NoAction(), LockGroup(group=3) ],
        actions[Group3] = [ NoAction(), LockGroup(group=1) ]
    };
};

partial alphanumeric_keys
xkb_symbols "shift_alt" {

    name[Group2]="Shift + Alt as LevelThree";
    key.type[Group2] = "ONE_LEVEL";

    key <AE02> { [], [ at ] };

    key <AE07>	{ [], [ braceleft ]	};
    key <AE08>	{ [], [ bracketleft ] };
    key <AE09>	{ [], [ bracketright ] };
    key <AE10>	{ [], [ braceright ] };
    key <AE11>	{ [], [ backslash ]	};

};


partial alphanumeric_keys
xkb_symbols "shift_caps" {

    name[Group3] = "Shift + Caps as group three";
    key.type[Group3] = "TWO_LEVEL";

    key <AD11>	{ [], [], [ bracketleft , braceleft ]	};
    key <AD12>  { [], [], [ bracketright, braceright ] };
    key <TLDE>	{ [], [], [ grave ]};

};

partial alphanumeric_keys
xkb_symbols "vim_navigation" {

    name[Group2]="Vim navigation with Shift + Alt";
    key.type[Group2] = "ONE_LEVEL";


    key <AC06>  { // H
        symbols[Group2] = [ Left ],
        actions[Group2] = [ RedirectKey(key=<LEFT>, clearMods=All) ] };

    key <AC07>  { // J
        symbols[Group2] = [ Down ],
        actions[Group2] = [ RedirectKey(key=<DOWN>, clearMods=All) ] };

    key <AC08>  { // K
        symbols[Group2] = [ Up ],
        actions[Group2] = [ RedirectKey(key=<UP>, clearMods=All) ] };

    key <AC09>  { // L
        symbols[Group2] = [ Right ],
        actions[Group2] = [ RedirectKey(key=<RGHT>, clearMods=All) ] };

    key <AD07>  { // U
        symbols[Group2] = [ Next ],
        actions[Group2] = [ RedirectKey(key=<PGDN>, clearMods=All) ] };

    key <AD08>  { // I
        symbols[Group2] = [ Prior ],
        actions[Group2] = [ RedirectKey(key=<PGUP>, clearMods=All) ] };

    key <AB07>  { // M
        symbols[Group2] = [ End ],
        actions[Group2] = [ RedirectKey(key=<END>, clearMods=All) ] };

    key <AB08>  { // ,
        symbols[Group2] = [ Home ],
        actions[Group2] = [ RedirectKey(key=<HOME>, clearMods=All) ] };

};

