// based on a keyboard map from an 'xkb/symbols/se' file

// default
default partial alphanumeric_keys
xkb_symbols "basic" {
    name[Group1]="Swedish";

// Göra en till grupp för CtrlCaps ÅÄÖ modifier?
    key.type="C_A_to_L3";

    //key <RALT> { [ ISO_Level3_Shift ] };
    //replace key <LVL3> { [ ISO_Level3_Shift ] };
    //modifier_map Mod5 { <LVL3> };

    key <TLDE>	{ [   section,    onehalf,    paragraph, threequarters]	};
    key <AE01>	{ [         1,     exclam,   exclamdown,  onesuperior ]	};
    key <AE02>	{ [         2,   quotedbl,           at,  twosuperior ]	};
    key <AE03>	{ [         3, numbersign,     sterling, threesuperior]	};
    key <AE04>	{ [         4,   currency,       dollar,   onequarter ]	};
    key <AE05>	{ [         5,    percent,     EuroSign,         cent ]	};
    key <AE06>	{ [         6,  ampersand,          yen,  fiveeighths ]	};
    key <AE07>	{ [         7,      slash,    braceleft,     division ]	};
    key <AE08>	{ [         8,  parenleft,  bracketleft, guillemotleft]	};
    key <AE09>	{ [         9, parenright, bracketright, guillemotright] };
    key <AE10>	{ [         0,      equal,   braceright,       degree ]	};
    key <AE11>	{ [      plus,   question,    backslash, questiondown ]	};
    key <AE12>	{ [dead_acute, dead_grave,    plusminus,      notsign ]	};

    key <AD01>	{ [         q,          Q,           at,  Greek_OMEGA ]	};
    key <AD02>	{ [         w,          W,      lstroke,      Lstroke ]	};
    key <AD03>	{ [         e,          E,     EuroSign,         cent ]	};
    key <AD04>	{ [         r,          R,   registered,   registered ]	};
    key <AD05>	{ [         t,          T,        thorn,        THORN ]	};
    key <AD06>	{ [         y,          Y,    leftarrow,          yen ]	};
    key <AD07>	{ [         u,          U,    downarrow,      uparrow ]	};
    key <AD08>	{ [         i,          I,   rightarrow,     idotless ]	};
    key <AD09>	{ [         o,          O,           oe,           OE ]	};
    key <AD10>	{ [         p,          P,        thorn,        THORN ]	};
    key <AD11>	{ [     aring,  Aring, dead_diaeresis, dead_abovering ]	};
    key <AD12>	{ [dead_diaeresis, dead_circumflex, dead_tilde, dead_caron ] };

    key <AC01>	{ [         a,          A,  ordfeminine,    masculine ]	};
    key <AC02>	{ [         s,          S,       ssharp,      section ]	};
    key <AC03>	{ [         d,          D,          eth,          ETH ]	};
    key <AC04>	{ [         f,          F,      dstroke,  ordfeminine ]	};
    key <AC05>	{ [         g,          G,          eng,          ENG ]	};
    key <AC06>	{ [         h,          H,      hstroke,      Hstroke ]	};
    key <AC07>	{ [         j,          J,    dead_hook,    dead_horn ] };
    key <AC08>	{ [         k,          K,          kra,    ampersand ]	};
    key <AC09>	{ [         l,          L,      lstroke,      Lstroke ]	};
    key <AC10>	{ [odiaeresis, Odiaeresis,       oslash,     Ooblique ]	};
    key <AC11>	{ [adiaeresis, Adiaeresis,           ae,           AE ]	};
    key <BKSL>	{ [apostrophe,   asterisk,        acute,     multiply ]	};

    key <LSGT>  { [      less,     greater,         bar,    brokenbar ] };
    key <AB01>	{ [         z,          Z, guillemotleft,        less ]	};
    key <AB02>	{ [         x,          X, guillemotright,    greater ]	};
    key <AB03>	{ [         c,          C,    copyright,    copyright ]	};
    key <AB04>	{ [         v,          V, leftdoublequotemark, leftsinglequotemark ]	};
    key <AB05>	{ [         b,          B, rightdoublequotemark, rightsinglequotemark ] };
    key <AB06>	{ [         n,          N,            n,            N ]	};
    key <AB07>	{ [         m,          M,           mu,    masculine ]	};
    key <AB08>	{ [     comma,  semicolon, dead_cedilla,  dead_ogonek ]	};
    key <AB09>	{ [    period,   colon, periodcentered, dead_abovedot ]	};
    key <AB10>	{ [     minus, underscore, dead_belowdot, dead_abovedot ] };

    key <SPCE>	{ [     space,      space,        space, nobreakspace ]	};

// Keys previously using CTRL+ALT type as Level5

    key <BKSP> { [       BackSpace,       BackSpace,        Terminate_Server,        NoSymbol ] };
    key <KPMU> { [     KP_Multiply,     KP_Multiply,     XF86ClearGrab,     KP_Multiply ] };
    key <FK01> { [              F1,              F1,              XF86Switch_VT_1,              F1 ] };
    key <FK02> { [              F2,              F2,              XF86Switch_VT_2,              F2 ] };
    key <FK03> { [              F3,              F3,              XF86Switch_VT_3,              F3 ] };
    key <FK04> { [              F4,              F4,              XF86Switch_VT_4,              F4 ] };
    key <FK05> { [              F5,              F5,              XF86Switch_VT_5,              F5 ] };
    key <FK06> { [              F6,              F6,              XF86Switch_VT_6,              F6 ] };
    key <FK07> { [              F7,              F7,              XF86Switch_VT_7,              F7 ] };
    key <FK08> { [              F8,              F8,              XF86Switch_VT_8,              F8 ] };
    key <FK09> { [              F9,              F9,              XF86Switch_VT_9,              F9 ] };
    key <FK10> { [             F10,             F10,             XF86Switch_VT_10,             F10 ] };
    key <KPSU> { [     KP_Subtract,     KP_Subtract,     XF86Prev_VMode,     KP_Subtract ] };
    key <KPAD> { [          KP_Add,          KP_Add,          XF86Next_VMode,          KP_Add ] };
    key <FK11> { [             F11,             F11,             XF86Switch_VT_11,             F11 ] };
    key <FK12> { [             F12,             F12,             XF86Switch_VT_12,             F12 ] };
    key <KPDV> { [       KP_Divide,       KP_Divide,       XF86Ungrab,       KP_Divide ] };

    // kpdl(comma)
    key.type="KEYPAD" ;
    key <KPDL> { [ KP_Delete, KP_Separator ] }; // <delete> <separator>

    // level3(ralt_switch)
    key <RALT> {
      type[Group1]="ONE_LEVEL",
      symbols[Group1] = [ ISO_Level3_Shift ]
    };
    // level3(modifier_mapping)
    replace key <LVL3> {
      type[Group1] = "ONE_LEVEL",
      symbols[Group1] = [ ISO_Level3_Shift ]
    };
    modifier_map Mod5 { <LVL3> };

};